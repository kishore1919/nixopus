name: QEMU Setup with qemu-kvm-action

on:
  push:
    branches: [feat/develop]
  pull_request:
    branches: [feat/develop]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro: [debian-11, debian-12, ubuntu-20.04, ubuntu-22.04, fedora, almalinux, archlinux]
    name: Test on ${{ matrix.distro }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-docker-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
          docker compose version

      - name: Run install.sh in ${{ matrix.distro }} VM
        uses: etchdroid/qemu-kvm-action@v1
        with:
          image: ${{ matrix.distro }}
          shell: /bin/bash
          run: |
            echo "Running install.sh inside ${{ matrix.distro }}"
            source /etc/os-release

            case "$ID" in
              ubuntu|debian)
                apt update && apt install -y curl sudo bash
                ;;
              fedora)
                dnf install -y curl sudo bash
                ;;
              almalinux|centos|rhel)
                yum install -y curl sudo bash
                ;;
              arch)
                pacman -Sy --noconfirm curl sudo bash
                ;;
              *)
                echo "Unsupported distro: $ID"
                exit 1
                ;;
            esac

            sudo bash -c "$(curl -sSL https://raw.githubusercontent.com/raghavyuva/nixopus/refs/heads/master/scripts/install.sh)" -- \
              --api-domain nixopusapi.example.tld \
              --app-domain nixopus.example.tld \
              --email admin@example.tld \
              --password Adminpassword@123 \
              --env production

      - name: Cleanup
        if: always()
        run: echo "Cleaned VM: ${{ matrix.distro }}"
          - centos
          - rhel

