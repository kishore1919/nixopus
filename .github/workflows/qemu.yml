name: QEMU Setup with etchdroid/qemu-kvm-action

on:
  push:
    branches: [feat/develop]
  pull_request:
    branches: [feat/develop]
  workflow_dispatch:

jobs:
  test_on_distros:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: debian11
            image_url: https://cloud.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2
            username: debian
          - distro: debian12
            image_url: https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-genericcloud-amd64.qcow2
            username: debian
          - distro: ubuntu2004
            image_url: https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.qcow2
            username: ubuntu
          - distro: ubuntu2204
            image_url: https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.qcow2
            username: ubuntu
          - distro: fedora_latest
            image_url: https://download.fedoraproject.org/pub/fedora/linux/releases/39/Cloud/x86_64/images/Fedora-Cloud-Base-39-1.5.x86_64.qcow2
            username: fedora
          - distro: almalinux_latest
            image_url: https://repo.almalinux.org/almalinux/9/cloud/x86_64/images/AlmaLinux-9-GenericCloud-latest.x86_64.qcow2
            username: almalinux
          - distro: archlinux_latest
            image_url: https://geo.mirror.pkgbuild.com/images/latest/Arch-Linux-x86_64-cloudimg.qcow2
            username: arch

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-utils sshpass cloud-utils wget

      - name: Setup QEMU VM
        uses: etchdroid/qemu-kvm-action@v1
        with:
          image-url: ${{ matrix.image_url }}
          username: ${{ matrix.username }}
          ssh-public-key: ${{ secrets.SSH_PUBLIC_KEY }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          cloud-init: true

      - name: Test VM connectivity
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
            ${{ matrix.username }}@localhost echo "Hello from ${{ matrix.distro }}"

      # - name: Optionally run install script
      #   if: false  # change to true when script is ready
      #   run: |
      #     scp -o StrictHostKeyChecking=no -P 22 ./scripts/install.sh ${{ matrix.username }}@localhost:/tmp/
      #     ssh -o StrictHostKeyChecking=no -p 22 ${{ matrix.username }}@localhost \
      #       'bash /tmp/install.sh'
